apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mssql-deliveries-db
spec:
  serviceName: mssql-deliveries-db
  replicas: 1
  template:
    metadata:
      labels:
        app: mssql-deliveries-db
    spec:
      terminationGracePeriodSeconds: 1
      containers:
      - name: mssql-deliveries-db
        image: mcr.microsoft.com/mssql/server:2017-latest
        ports:
        - containerPort: 1433
        env:
        - name: ACCEPT_EULA
          value: 'Y'
        - name: MSSQL_SA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql
              key: SA_PASSWORD
        volumeMounts:
        - name: mssqldb
          mountPath: /var/opt/mssql
      volumes:
      - name: mssqldb
        persistentVolumeClaim:
          claimName: mssql-deliveries-data
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-deliveries-db
spec:
  selector:
    app: mssql-deliveries-db
  ports:
  - protocol: TCP
    port: 1433
    targetPort: 1433
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mssql-deliveries-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fok-deployment-deliveries
  labels:
    app: fok-deliveries
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fok-deliveries
  template:
    metadata:
      labels:
        app: fok-deliveries
    spec:
      containers:      
      - name: orderapi
        image: caretro/foodonkontainers:deliveriesapi_v1
        ports:
        - containerPort: 80
        env:
        - name: "ASPNETCORE_ENVIRONMENT"
          value: "Production"
      imagePullSecrets:
      - name: regcredcaretro
---
kind: Service
apiVersion: v1
metadata:
  labels:
    name: reti-lab-foodonkontainers-deliveries-api
  name: reti-lab-foodonkontainers-deliveries-api
spec:
  selector:
    app: fok-deliveries
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80


